import{A as c,a as h}from"./index-V7iMyV9K.js";class u{constructor(){this.baseUrl=c,this.userCache=new Map,this.pendingRequests=new Map}async makeRequest(e,t=null){const n=`${this.baseUrl}${e}`,s={"Content-Type":"application/json"},i=h.getToken();i&&(s.Authorization=`Bearer ${i}`);const r=await fetch(n,{method:"POST",headers:s,body:t?JSON.stringify(t):void 0});if(!r.ok){let a=`HTTP error ${r.status}`;try{const o=await r.json();o!=null&&o.message&&(a=o.message)}catch{}throw typeof a=="string"&&a.toLowerCase().includes("token has expired")&&(h.logout(),window.location.reload()),new Error(a)}return r.json()}async getUser(e,t=!0){if(t&&this.userCache.has(e))return this.userCache.get(e);if(this.pendingRequests.has(e))return this.pendingRequests.get(e);const n=this.makeRequest("/getUser",{id:e}).then(s=>(this.userCache.set(e,s),this.pendingRequests.delete(e),s)).catch(s=>{throw this.pendingRequests.delete(e),s});return this.pendingRequests.set(e,n),n}clearUserCache(e=null){e?this.userCache.delete(e):this.userCache.clear()}}const p=new u;export{p as userService};
