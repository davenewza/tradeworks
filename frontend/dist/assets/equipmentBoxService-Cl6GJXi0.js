import{A as c,a as u}from"./index-CyRejPUG.js";class h{constructor(){this.baseUrl=c,this.equipmentBoxCache=new Map}async makeRequest(e,t=null){const s=`${this.baseUrl}${e}`,n={"Content-Type":"application/json"},r=u.getToken();r&&(n.Authorization=`Bearer ${r}`);const a={method:t?"POST":"GET",headers:n};t&&(a.body=JSON.stringify(t));const o=await fetch(s,a);if(!o.ok){const i=(await o.json().catch(()=>({}))).message||`HTTP error! status: ${o.status}`;throw typeof i=="string"&&i.toLowerCase().includes("token has expired")&&(u.logout(),window.location.reload()),new Error(i)}return o.json()}async calculateEquipmentBoxes(e,t){return this.makeRequest("/calculateEquipmentBoxes",{id:e,boxType:t})}async resetDeliveryInfo(e){return this.makeRequest("/resetDeliveryInfo",{id:e})}async listQuoteEquipmentBoxes(e){return this.makeRequest("/listQuoteEquipmentBoxes",{where:{quote:{id:{equals:e}}}})}async getEquipmentBox(e,t=!0){if(t&&this.equipmentBoxCache.has(e))return this.equipmentBoxCache.get(e);const s=await this.makeRequest("/getEquipmentBox",{id:e});return this.equipmentBoxCache.set(e,s),s}clearEquipmentBoxCache(e=null){e?this.equipmentBoxCache.delete(e):this.equipmentBoxCache.clear()}async listEquipmentBoxes(){return this.makeRequest("/listEquipmentBoxes")}}const q=new h;export{q as equipmentBoxService};
